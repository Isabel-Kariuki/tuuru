import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from 'next/link';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  // Sidebar menu items with icons
  const menu = [
    { label: 'Dashboard', href: '/', icon: (
      <svg className="w-6 h-6 mr-3 transition-transform group-hover:scale-110" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M3 12l2-2m0 0l7-7 7 7m-9 2v8a2 2 0 002 2h4a2 2 0 002-2v-8m-6 0h6" /></svg>
    ) },
    { label: 'Customers', href: '/customers', icon: (
      <svg className="w-6 h-6 mr-3 transition-transform group-hover:scale-110" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M17 20h5v-2a4 4 0 00-3-3.87M9 20H4v-2a4 4 0 013-3.87m6-2a4 4 0 10-8 0 4 4 0 008 0zm6-2a4 4 0 10-8 0 4 4 0 008 0z" /></svg>
    ) },
    { label: 'Meter Readings', href: '/meter-readings', icon: (
      <svg className="w-6 h-6 mr-3 transition-transform group-hover:scale-110" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><circle cx="12" cy="11" r="3" /><path strokeLinecap="round" strokeLinejoin="round" d="M12 8c-1.657 0-3 1.343-3 3 0 2.5 3 7 3 7s3-4.5 3-7c0-1.657-1.343-3-3-3z" /></svg>
    ) },
    { label: 'Bills', href: '/bills', icon: (
      <svg className="w-6 h-6 mr-3 transition-transform group-hover:scale-110" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><rect x="4" y="4" width="16" height="16" rx="2" /><path d="M8 8h8M8 12h8M8 16h4" /></svg>
    ) },
    { label: 'Payments', href: '/payments', icon: (
      <svg className="w-6 h-6 mr-3 transition-transform group-hover:scale-110" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><rect x="2" y="7" width="20" height="10" rx="2" /><path d="M2 10h20" /></svg>
    ) },
    { label: 'Reports', href: '/reports', icon: (
      <svg className="w-6 h-6 mr-3 transition-transform group-hover:scale-110" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M9 17v-2a4 4 0 014-4h2a4 4 0 014 4v2" /><circle cx="12" cy="7" r="4" /></svg>
    ), badge: true },
    { label: 'Receipts', href: '/receipts', icon: (
      <svg className="w-6 h-6 mr-3 transition-transform group-hover:scale-110" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><rect x="4" y="4" width="16" height="16" rx="2" /><path d="M8 8h8M8 12h8M8 16h4" /></svg>
    ) },
  ];
  const secondary = [
    { label: 'Settings', icon: (
      <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M12 8v4l3 3" /><circle cx="12" cy="12" r="10" /></svg>
    ) },
    { label: 'Logout', icon: (
      <svg className="w-5 h-5 mr-2" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path strokeLinecap="round" strokeLinejoin="round" d="M17 16l4-4m0 0l-4-4m4 4H7" /><path strokeLinecap="round" strokeLinejoin="round" d="M3 12h4" /></svg>
    ) },
  ];
  // Get current path for active highlight (Next.js 13+ usePathname)
  let pathname = '';
  if (typeof window !== 'undefined') {
    pathname = window.location.pathname;
  }

  return (
    <html lang="en">
      <body className="bg-gray-50 min-h-screen">
        <div className="flex h-screen">
          {/* Creative Sidebar for desktop */}
          <aside className="hidden md:flex flex-col w-72 bg-gradient-to-b from-blue-500 via-teal-400 to-blue-300 shadow-2xl p-0 rounded-r-3xl border-r border-blue-200 relative overflow-hidden">
            {/* Decorative SVG blob */}
            <svg className="absolute top-0 left-0 w-full h-32 opacity-30" viewBox="0 0 300 100" fill="none"><ellipse cx="150" cy="50" rx="140" ry="40" fill="#38bdf8" /></svg>
            {/* Logo/Branding */}
            <div className="flex flex-col items-center py-8 z-10">
              <div className="w-20 h-20 rounded-full bg-gradient-to-tr from-blue-200 via-white to-teal-200 flex items-center justify-center shadow-xl mb-3 border-4 border-white">
                {/* Water drop icon */}
                <svg className="w-10 h-10 text-blue-500" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24"><path d="M12 2C12 2 7 8.5 7 13a5 5 0 0010 0c0-4.5-5-11-5-11z" /><circle cx="12" cy="17" r="3" /></svg>
              </div>
              <span className="text-xl font-extrabold text-white tracking-wide drop-shadow">Tuuru Water</span>
            </div>
            {/* Menu */}
            <nav className="flex flex-col gap-2 mt-6 px-4 z-10">
              {menu.map((item) => {
                const isActive = typeof window !== 'undefined' && pathname === item.href;
                return (
                  <Link
                    key={item.href}
                    href={item.href}
                    className={`group flex items-center px-5 py-3 my-1 rounded-full font-semibold transition-all duration-200 relative focus:outline-none focus:ring-2 focus:ring-blue-200/60 ${isActive ? 'bg-white text-blue-700 shadow-lg border-l-4 border-blue-500' : 'text-white/90 hover:bg-white/20 hover:text-white'}`}
                    style={{ fontSize: '1.12rem' }}
                  >
                    {item.icon}
                    {item.label}
                    {item.badge && (
                      <span className="ml-2 bg-pink-500 text-white text-xs px-2 py-0.5 rounded-full animate-pulse">New</span>
                    )}
                  </Link>
                );
              })}
            </nav>
            {/* Divider */}
            <div className="my-6 border-t border-blue-200/40 mx-6" />
            {/* Footer: User avatar and secondary actions */}
            <div className="flex flex-col items-center mb-6 mt-auto z-10">
              <div className="w-12 h-12 rounded-full bg-gradient-to-tr from-blue-300 via-white to-teal-200 flex items-center justify-center shadow border-2 border-white mb-2">
                <span className="text-lg font-bold text-blue-700">AD</span>
              </div>
              <div className="flex gap-2 mt-1">
                {secondary.map((item) => (
                  <button key={item.label} className="flex items-center px-3 py-1 rounded-full bg-white/80 text-blue-700 font-medium text-sm shadow hover:bg-white focus:outline-none focus:ring-2 focus:ring-blue-200/60 transition">
                    {item.icon}
                    {item.label}
                  </button>
                ))}
              </div>
            </div>
            {/* Decorative gradient blob at bottom */}
            <div className="absolute bottom-0 left-0 w-full h-24 bg-gradient-to-t from-blue-200/60 to-transparent" />
          </aside>
          {/* Mobile topbar */}
          <header className="md:hidden flex items-center justify-between w-full bg-white shadow-lg p-4 rounded-b-2xl border-b border-gray-100">
            <div className="text-xl font-extrabold text-blue-700 tracking-tight">Utility Admin</div>
            <nav className="flex gap-2">
              <Link href="/" className="hover:text-blue-600 font-medium px-2 py-1 rounded transition">Dashboard</Link>
              <Link href="/customers" className="hover:text-blue-600 font-medium px-2 py-1 rounded transition">Customers</Link>
              <Link href="/meter-readings" className="hover:text-blue-600 font-medium px-2 py-1 rounded transition">Meter Readings</Link>
              <Link href="/bills" className="hover:text-blue-600 font-medium px-2 py-1 rounded transition">Bills</Link>
              <Link href="/payments" className="hover:text-blue-600 font-medium px-2 py-1 rounded transition">Payments</Link>
              <Link href="/reports" className="hover:text-blue-600 font-medium px-2 py-1 rounded transition">Reports</Link>
              <Link href="/receipts" className="hover:text-blue-600 font-medium px-2 py-1 rounded transition">Receipts</Link>
            </nav>
          </header>
          {/* Main content */}
          <main className="flex-1 p-4 overflow-y-auto">{children}</main>
        </div>
      </body>
    </html>
  );
}
